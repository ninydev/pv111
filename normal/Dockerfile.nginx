# Используем базовый образ с Nginx
FROM nginx:latest

# Устанавливаем пакеты, которые могут понадобиться для настройки
RUN apt-get update \
    && apt-get install -y \
    php mc php8.2-fpm php8.2-dev unzip libpq-dev

# Устанавливаем необходимые расширения PHP mysql
RUN docker-php-ext-install pdo pdo_mysql && docker-php-ext-enable pdo_mysql
RUN docker-php-ext-install mysqli && docker-php-ext-enable mysqli

# Установка дополнительных расширений PHP для Redis
RUN pecl install redis && docker-php-ext-enable redis

# Установка Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer


# Копируем наш кастомный конфиг Nginx внутрь контейнера
COPY ./nginx.conf /etc/nginx/nginx.conf

# Создаем директорию для монтирования DocumentRoot
RUN mkdir -p /usr/share/nginx/html

# Указываем рабочую директорию
WORKDIR /usr/share/nginx/html

# Копируем содержимое DocumentRoot внутрь контейнера
COPY ./src .

# Устанавливаем права доступа
RUN chown -R nginx:nginx /usr/share/nginx/html

# Открываем порт 80 для HTTP
EXPOSE 80

# Запускаем Nginx при старте контейнера
#CMD ["service", "php8.2-fpm", "start"]
#CMD ["nginx", "-g", "daemon off;"]
CMD service php8.2-fpm start && nginx -g "daemon off;"


